import logging
from aiogram import Bot, Dispatcher, executor, types
from config import API_TOKEN, admin, adminka, kytakber, kytakike, kytakoc, mindyrt, kytakdyrt, kytakbish, kytakalta, kytakete, kytakcig, kytaktyg, kytakfnew, kytak23, kytak006, mimi
import keyboard as kb
import functions as func
import sqlite3
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils.exceptions import Throttled
import aiogram.utils.markdown as fmt
import sys
import io
    
  


storage = MemoryStorage()
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=storage)
connection = sqlite3.connect('data.db')
q = connection.cursor()

class st(StatesGroup):
	item = State()
	item2 = State()
	kytak = State()
	buy = State()
	botom = State()
	summa = State()
	walamber = State()
	item6 = State()

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
	func.join(chat_id=message.chat.id)
	q.execute(f"SELECT block FROM users WHERE user_id = {message.chat.id}")
	result = q.fetchone()
	if result[0] == 0:
		if message.chat.id == admin:
			await message.answer(f"'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {message.from_user.first_name} ", reply_markup=kb.menu)
		else:
			await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name} ! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤–∞—Å —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ!', reply_markup=kb.butmenu)
			#await message.answer(admin, f'–ß–µ–ª {message.from_user.first_name} {message.from_user.mention}')

@dp.message_handler(commands=['admin'])
async def start(message: types.Message):
	if message.chat.id == admin:
		await message.answer('<b>–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–¥–º–∏–Ω–∫–∏</b>\n\n–ê–¥–º–∏–Ω—ã: @Adres31, @AsterFerre, @Dmitriy_LD, @alex_mid1', reply_markup=kb.admmenu, parse_mode='HTML')
	elif message.chat.id == mimi:
		await message.answer('<b>–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–¥–º–∏–Ω–∫–∏</b>\n\n–ê–¥–º–∏–Ω—ã: @Adres31, @AsterFerre, @Dmitriy_LD, @alex_mid1', reply_markup=kb.admmenu, parse_mode='HTML')
	elif message.chat.id == kytakber:
		await message.answer('<b>–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–¥–º–∏–Ω–∫–∏</b>\n\n–ê–¥–º–∏–Ω—ã: @Adres31, @AsterFerre, @Dmitriy_LD, @alex_mid1', reply_markup=kb.admmenu, parse_mode='HTML')



@dp.message_handler(commands=['kytak'])
async def start(message: types.Message):
	await message.answer('You is better')

#####################################################################################################################################################################################################################
@dp.message_handler(content_types=['text'], text='üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞', reply_markup=kb.settings)

@dp.message_handler(content_types=['text'], text='00')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞', reply_markup=kb.settings)
	await bot.send_video(message.chat.id, open('vidos.mp4', 'rb'))


@dp.message_handler(content_types=['text'], text='üîê –ö–æ—à–µ–ª–µ–∫')
async def with_hidden_link(message: types.Message, state: FSMContext):
	if message.chat.id == mindyrt:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>100 213 ABR (1 470,78 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytakoc:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytakike:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytakber:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>1800 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')	
	
	elif message.chat.id == kytakdyrt:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytakbish:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>600 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytakalta:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytakete:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytakcig:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytaktyg:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytak23:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>400 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == kytak006:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>400 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')
	
	elif message.chat.id == mimi:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\n<b>Amber</b>\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>2 000 000 ABR (1 520 332 000,00 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–µ–ª–∏: <b>400 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')





	else:
		await message.answer(f"{fmt.hide_link('https://i.gifer.com/3OGMy.gif')}üîê –ö–æ—à–µ–ª–µ–∫\n\nAmber\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>0 ABR (0 RUB)</b>\n‚¨áÔ∏è–í—ã–≤–æ–¥–∏–ª–∏:<b>0 ABR</b>", reply_markup=kb.wallet, parse_mode='HTML')

@dp.message_handler(content_types=['text'], text='üí≥ –ö—É–ø–∏—Ç—å Amber')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ Bep20 Trust Wallet –∏–ª–∏ Metamask —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–ø–ª–∞—Ç–∞.', reply_markup=kb.butback, parse_mode='markdown')
	await st.buy.set()

@dp.message_handler(content_types=['text'], text='üö® Airdrop')
async def handledr(message: types.Message, state: FSMContext):
	if message.chat.id == kytakber:
		await message.answer(f'''
*–≠–π—Ä–¥—Ä–æ–ø (airdrop)* ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ —Ä–∞–∑–¥–∞—á–∏ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Å—Ç–∏–º—É–ª—è—Ü–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ –º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏. 

  1. –ù–∞–π—Ç–∏ –∏ —Å–æ–±—Ä–∞—Ç—å –º–æ–Ω–µ—Ç—ã —Ä–∞–∑–±—Ä–æ—Å–∞–Ω–Ω—ã–µ –ø–æ –º–∏—Ä—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º  –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏. 
  2. –ü–æ–±–µ–∂–¥–∞—Ç—å –≤ –±–∏—Ç–≤–∞—Ö —Å –º–æ–Ω—Å—Ç—Ä–∞–º–∏.
  3. –í—ã–ø–æ–ª–Ω—è—Ç—å –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã–µ –∫–≤–µ—Å—Ç—ã. 
  4. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.

*–°–æ–±—Ä–∞–≤ —Ç–æ–∫–µ–Ω—ã –Ω–∞ —Å—É–º–º—É –æ—Ç 20$ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –Ω–∞ —Å–≤–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π –∫–æ—à–µ–ª—ë–∫..*


üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:

–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:
https://t.me/AmberPandoraBot?start={message.chat.id}

üí° –ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: *0* —á–µ–ª.
üìà –í–∞—à –ª–∏—á–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: *5%*

‚öôÔ∏è –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—É–º–º–∞: *0* AMBR

 *–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –º–æ–∂–Ω–æ –≤ –∏–≥—Ä–µ.*
 https://pandoragame.page.link/sBNRzLhh79MNmBpL9
		''',  parse_mode='markdown')

	else:
		await message.answer(f'''
*–≠–π—Ä–¥—Ä–æ–ø (airdrop)* ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ —Ä–∞–∑–¥–∞—á–∏ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Å—Ç–∏–º—É–ª—è—Ü–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ –º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏. 

  1. –ù–∞–π—Ç–∏ –∏ —Å–æ–±—Ä–∞—Ç—å –º–æ–Ω–µ—Ç—ã —Ä–∞–∑–±—Ä–æ—Å–∞–Ω–Ω—ã–µ –ø–æ –º–∏—Ä—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º  –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏. 
  2. –ü–æ–±–µ–∂–¥–∞—Ç—å –≤ –±–∏—Ç–≤–∞—Ö —Å –º–æ–Ω—Å—Ç—Ä–∞–º–∏.
  3. –í—ã–ø–æ–ª–Ω—è—Ç—å –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã–µ –∫–≤–µ—Å—Ç—ã. 
  4. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.

*–°–æ–±—Ä–∞–≤ —Ç–æ–∫–µ–Ω—ã –Ω–∞ —Å—É–º–º—É –æ—Ç 20$ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –Ω–∞ —Å–≤–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π –∫–æ—à–µ–ª—ë–∫..*


üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:

–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:
https://t.me/AmberPandoraBot?start={message.chat.id}

üí° –ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: *0* —á–µ–ª.
üìà –í–∞—à –ª–∏—á–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: *5%*

‚öôÔ∏è –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—É–º–º–∞: *0* AMBR

 *–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –º–æ–∂–Ω–æ –≤ –∏–≥—Ä–µ.*
 https://pandoragame.page.link/sBNRzLhh79MNmBpL9
		''',  parse_mode='markdown')

@dp.message_handler(content_types=['text'], text='üßëüèª‚Äçüíª –û –ø—Ä–æ–µ–∫—Ç–µ')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('''
*Amber* - –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –∏ –¥–≤–∏–∂—É—â–∞—è —Å–∏–ª–∞ –∏–≥—Ä–æ–≤–æ–π —ç–∫–æ–Ω–æ–º–∏–∫–∏ Pandora, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Ç–æ–∫–µ–Ω BEP-20 –≤ —Å–µ—Ç–∏ Binance Smart Chain (BSC). –í—Å–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–∫—É–ø–∫–∏ –∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –Ω–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏ –≤—ã–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –≤ —Ç–æ–∫–µ–Ω–∞—Ö Amber. 

*Pandora* - —ç—Ç–æ  MMORPG –∏–≥—Ä–∞ –≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ , –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã –∏ NFT, —Å —Ü–µ–ª—å—é –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –±–ª–æ–∫—á–µ–π–Ω –º–∏–ª–ª–∏–æ–Ω–∞–º –≥–µ–π–º–µ—Ä–æ–≤ —Å –ø–æ–º–æ—â—å—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏–≥—Ä—ã –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞. –° –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ–º –±–ª–æ–∫—á–µ–π–Ω–∞ –∏ NFT –∏–≥—Ä–æ–∫–∏ —Å–º–æ–≥—É—Ç –≤–ª–∞–¥–µ—Ç—å —Å–≤–æ–∏–º–∏ –∏–≥—Ä–æ–≤—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏, –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∏—Ö, –∞ —Ç–∞–∫–∂–µ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ä–∞–∂–µ–Ω–∏—è—Ö PvP, –º–∞–π–Ω–∏–Ω–≥–µ PvP –∏ –æ–±—É—á–µ–Ω–∏–∏ PvE.

–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Å–º–æ—Ç—Ä–∏—Ç–µ —Ç—É—Ç  Pandoragame.org
		''', reply_markup=kb.seti, parse_mode='markdown')

@dp.message_handler(content_types=['text'], text='‚è™ –ú–µ–Ω—é')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('–ú–µ–Ω—é', reply_markup=kb.butmenu)

#####################################################################################################################################################################################################################
@dp.message_handler(content_types=['text'], text='‚è™ –ù–∞–∑–∞–¥')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('‚è™ –ù–∞–∑–∞–¥', reply_markup=kb.menu)

@dp.message_handler(content_types=['text'], text='üìã –°–º–∞—Ä—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('–°–º–∞—Ä—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç Amber')
	await message.answer('0xbb2f331703db8b9b693f8da19cf77d9f1f4a1b88')

@dp.message_handler(content_types=['text'], text='‚ùì –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('''
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –º–æ–Ω–µ—Ç—ã —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. 
1. –°–æ–∑–¥–∞–π—Ç–µ –∫–æ—à–µ–ª—ë–∫ Trust wallet. 
2. –î–æ–±–∞–≤—å—Ç–µ –º–æ–Ω–µ—Ç—É Amber –≤ —Å–≤–æ–π –∫–æ—à–µ–ª—ë–∫. 
3. –ö–∞–∫ –∫—É–ø–∏—Ç—å usdt –∏—Å–ø–æ–ª—å–∑—É—è –±–∏—Ä–∂—É Binanse –∏ –≤—ã–≤–µ—Å—Ç–∏ usdt –≤ –∫–æ—à–µ–ª—ë–∫ Trust wallet.
''')
	await message.answer('''
<b>1.–∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ—à–µ–ª–µ–∫ TrustWallet</b>

–°–∫–∞—á–∞–π—Ç–µ –∫–æ—à–µ–ª—ë–∫ –∏ –Ω–∞–¥—ë–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å–Ω—É—é —Ñ—Ä–∞–∑—É –∏–∑ 12 —Å–ª–æ–≤ ( seed ).
  –ü–æ—Ç–µ—Ä—è–≤ seed —Ñ—Ä–∞–∑—É –≤—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ—à–µ–ª—å–∫—É! 
https://trustwallet.com/ru
		''', parse_mode='HTML')
	await bot.send_video(message.from_user.id, open('vidos.mp4', 'rb'), caption='''
<b>2. –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—É Amber –≤ –∫–æ—à–µ–ª–µ–∫</b>
			''', reply_markup=kb.butmenu, parse_mode='HTML')

@dp.message_handler(content_types=['text'], text='–û—Ç–º–µ–Ω–∞')
async def handledr(message: types.Message, state: FSMContext):
	await message.answer('‚è™ –ù–∞–∑–∞–¥', reply_markup=kb.butmenu)

@dp.message_handler(content_types=['text'], text='üí¨ –†–∞—Å—Å—ã–ª–∫–∞')
async def hangdler(message: types.Message, state: FSMContext):
	func.join(chat_id=message.chat.id)
	q.execute(f"SELECT block FROM users WHERE user_id = {message.chat.id}")
	result = q.fetchone()
	if result[0] == 0:
		if message.chat.id == admin:
			await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏ –±–ª—è—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=kb.back)
			await st.item.set()
		else:
			await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.', reply_markup=kb.back)
			await st.item.set()

@dp.message_handler(content_types=['text'], text='üì° –†–∞—Å—Å—ã–ª–∫–∞')
async def hangdler(message: types.Message, state: FSMContext):
		await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.', reply_markup=kb.csk)
		await st.botom.set()

@dp.message_handler(content_types=['text'])
async def h(message: types.Message, state: FSMContext):
	func.join(chat_id=message.chat.id)
	q.execute(f"SELECT block FROM users WHERE user_id = {message.chat.id}")
	result = q.fetchone()
	if result[0] == 0:
		if message.chat.id == admin:
			pass
		else:
			await message.answer('–ù–µ –∑–Ω–∞—é –æ —á–µ–º –≤—ã?')
			await bot.send_message(admin, f"<b>–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å!</b>\n<b>–û—Ç:</b> {message.from_user.mention}\nID: {message.chat.id}\n<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message.text}", reply_markup=kb.fun(message.chat.id), parse_mode='HTML')

#####################################################################################################################################################################################################################
@dp.callback_query_handler(lambda call: True) # Inline —á–∞—Å—Ç—å
async def cmd_image(call, state: FSMContext):
	if 'ans' in call.data:
		a = call.data.index('-ans')
		ids = call.data[:a]
		await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç:', reply_markup=kb.back)
		await st.item2.set() # –∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		await state.update_data(uid=ids)
	if 'bns' in call.data:
		a = call.data.index('-bns')
		ids = call.data[:a]
		await call.message.answer('–í–≤–µ–¥–∏—Ç–µ summy:', reply_markup=kb.back)
		await st.item6.set() # –∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		await state.update_data(uid=ids)
	elif 'ignor' in call.data:
		await call.answer('–£–¥–∞–ª–µ–Ω–æ')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
		await state.finish()
#####################################################################################################################################################################################################################
	elif 'alex_mid1' in call.data:
		await call.message.answer('üë§ @alex_mid1\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'Techno_Web' in call.data:
		await call.message.answer('üë§ @Techno_Web\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'webcoderpt' in call.data:
		await call.message.answer('üë§ @webcoderpt\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'Adres31' in call.data:
		await call.message.answer('üë§ @Adres31\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'AsterFerre' in call.data:
		await call.message.answer('üë§ @AsterFerre\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'Dmitriy_LD' in call.data:
		await call.message.answer('üë§ @Dmitriy_LD\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif '000' in call.data:
		await call.message.answer('üë§ @\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'PROCoinPrivateSALE' in call.data:
		await call.message.answer('üë§ @PROCoinPrivateSALE\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'ZBOOM1' in call.data:
		await call.message.answer('üë§ @ZBOOM1\n\nüí∏–ë–∞–ª–∞–Ω–∞—Å: 0 ABR\n\n–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ INFO')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
#####################################################################################################################################################################################################################
	elif 'incruktion' in call.data:
		await call.message.answer('''
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –º–æ–Ω–µ—Ç—ã 
–°–ª–µ–¥—É–π—Ç–µ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. 
1.–∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ—à–µ–ª–µ–∫ TrustWallet
2. –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—É Amber –≤ –∫–æ—à–µ–ª–µ–∫. 
3. –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –∞–¥—Ä–µ—Å –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –º–æ–Ω–µ—Ç.
			''')
		await bot.send_video(id, open('vidos.mp4', 'rb'))
	elif 'get' in call.data:
		await call.message.answer('–í—Å—Ç–∞–≤—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞  Bep20', reply_markup=kb.butinc)
		await bot.delete_message(call.message.chat.id, call.message.message_id)
		await st.kytak.set()
	elif 'refka' in call.data:
		if message.chat.id == kytakber:
			await call.message.answer(f'''
üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:

–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:
https://t.me/AmberPandoraBot?start=

üí° –ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>1 —á–µ–ª.</b> 
üìà –í–∞—à –ª–∏—á–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: <b>5%</b>
‚öôÔ∏è –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—É–º–º–∞: <b>0 AMBR</b>
			''', parse_mode='HTML')
		else:
			await call.message.answer(f'''
üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:

–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:
https://t.me/AmberPandoraBot?start=

üí° –ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>0 —á–µ–ª.</b> 
üìà –í–∞—à –ª–∏—á–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: <b>5%</b>
‚öôÔ∏è –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—É–º–º–∞: <b>0 AMBR</b>
			''', parse_mode='HTML')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
		await state.finish()
	elif 'otmena' in call.data:
		await bot.delete_message(call.message.chat.id, call.message.message_id)
		await state.finish()		
	elif 'netsred' in call.data:
		await call.message.answer('–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
	elif 'pricemonet' in call.data:
		await call.message.answer('–í –¥–∞–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç 1 —Ü–µ–Ω—Ç –∑–∞ –º–æ–Ω–µ—Ç—É\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Ç–æ–∏–º–æc—Ç—å')
		await bot.delete_message(call.message.chat.id, call.message.message_id)

	elif 'statiks' in call.data:
		await call.message.answer('''
üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: 11

–í–Ω–∏–∑—É —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:

			''', reply_markup=kb.polzi)
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'popal' in call.data:
		await call.message.answer('''
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä Pandora. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ü–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—É.

https://pandoragame.page.link/sBNRzLhh79MNmBpL9
			''')
		await bot.delete_message(call.message.chat.id, call.message.message_id)

		
#####################################################################################################################################################################################################################
	elif 'qqqqqqqqq' in call.data:
		await call.message.answer('''
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

–í—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ: *20 USDT Bep20*

–í—ã –ø–æ–ª—É—á–∏—Ç–µ: *200 ABR* 

*–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT Bep20 –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å*

			''', parse_mode='markdown')
		await call.message.answer('*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')

		await bot.send_message(admin, f'20 USD')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'wwwwwwww' in call.data:
		await call.message.answer('''
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

–í—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ: *50 USDT Bep20*

–í—ã –ø–æ–ª—É—á–∏—Ç–µ: *500 ABR* 

*–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT Bep20 –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å*

			''', parse_mode='markdown')
		await call.message.answer('*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')

		await bot.send_message(admin, f'50 USD')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'eeeeee' in call.data:
		await call.message.answer('''
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

–í—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ: *100 USDT Bep20*

–í—ã –ø–æ–ª—É—á–∏—Ç–µ: *1000 ABR* 

*–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT Bep20 –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å*

			''', parse_mode='markdown')
		await call.message.answer('*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')

		await bot.send_message(admin, f'100 USD')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'rrrrrrrr' in call.data:
		await call.message.answer('''
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

–í—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ: *250 USDT Bep20*

–í—ã –ø–æ–ª—É—á–∏—Ç–µ: *2500 ABR* 

*–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT Bep20 –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å*

			''', parse_mode='markdown')
		await call.message.answer('*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')

		await bot.send_message(admin, f'250 USD')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'tttttttt' in call.data:
		await call.message.answer('''
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

–í—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ: *500 USDT Bep20*

–í—ã –ø–æ–ª—É—á–∏—Ç–µ: *5000 ABR* 

*–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT Bep20 –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å*

			''', parse_mode='markdown')
		await call.message.answer('*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')

		await bot.send_message(admin, f'500 USD')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'yyyyyy' in call.data:
		await call.message.answer('''
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

–í—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ: *1000 USDT Bep20*

–í—ã –ø–æ–ª—É—á–∏—Ç–µ: *10 000 ABR* 

*–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT Bep20 –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å*

			''', parse_mode='markdown')
		await call.message.answer('*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')

		await bot.send_message(admin, f'1000 USD')
		await bot.delete_message(call.message.chat.id, call.message.message_id)
	elif 'uuuuuuue' in call.data:
		await call.message.answer('O—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏ –æ—Ç 20 USDT –¥–æ 1000 USDT', reply_markup=kb.butback)
		await st.summa.set()
		await bot.delete_message(call.message.chat.id, call.message.message_id)
		#####################
	elif 'Bep20' in call.data:
		await call.message.answer('*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')
		await bot.send_message(admin, f'Bep20')
		#####################
	elif 'lllllllllll' in call.data:
		await call.message.answer('‚è≥ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∑–∞–π–º—ë—Ç 25-30 —Å–µ–∫')
		await bot.send_message(admin, f'–û–ø–ª–∞—Ç–∏–ª –æ–Ω!')
#####################################################################################################################################################################################################################
@dp.message_handler(state=st.summa)
async def h(message: types.Message, state: FSMContext):
	func.join(chat_id=message.chat.id)
	q.execute(f"SELECT block FROM users WHERE user_id = {message.chat.id}")
	result = q.fetchone()
	if result[0] == 0:
		if message.chat.id == admin:
			pass
		elif message.text == '–û—Ç–º–µ–Ω–∞':
			await message.answer('–û—Ç–º–µ–Ω–∞! –í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥.', reply_markup=kb.butmenu)
			await state.finish()
		else:
			await message.answer('‚è≥–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...', reply_markup=kb.butmenu)
			await bot.send_message(admin, f"<b>Summa!</b>\n<b>–û—Ç:</b> {message.from_user.mention}\nID: {message.chat.id}\n<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message.text} USDT", reply_markup=kb.fan(message.chat.id), parse_mode='HTML')
			await state.finish()


@dp.message_handler(state=st.buy)
async def h(message: types.Message, state: FSMContext):
	func.join(chat_id=message.chat.id)
	q.execute(f"SELECT block FROM users WHERE user_id = {message.chat.id}")
	result = q.fetchone()
	if result[0] == 0:
		if message.chat.id == admin:
			pass
		elif message.text == '–û—Ç–º–µ–Ω–∞':
			await message.answer('–û—Ç–º–µ–Ω–∞! –í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥.', reply_markup=kb.butmenu)
			await state.finish()
		else:
			await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏', reply_markup=kb.summa)
			await bot.send_message(admin, f"<b>Wallet!</b>\n<b>–û—Ç:</b> {message.from_user.mention}\nID: {message.chat.id}\n<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message.text}", reply_markup=kb.fun(message.chat.id), parse_mode='HTML')
			await state.finish()


@dp.message_handler(state=st.kytak)
async def proc(message: types.Message, state: FSMContext):
	if message.text == '–û—Ç–º–µ–Ω–∞':
		await message.answer('–û—Ç–º–µ–Ω–∞! –í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥.', reply_markup=kb.butmenu)
		await state.finish()
	elif message.text == '‚ùì –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤—ã–≤–æ–¥—É':
		await bot.send_video(message.from_user.id, open('vidos.mp4', 'rb'), caption='''
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –º–æ–Ω–µ—Ç—ã 
–°–ª–µ–¥—É–π—Ç–µ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. 
1.–∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ—à–µ–ª–µ–∫ TrustWallet
2. –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—É Amber –≤ –∫–æ—à–µ–ª–µ–∫. 
3. –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –∞–¥—Ä–µ—Å –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –º–æ–Ω–µ—Ç.
			''', reply_markup=kb.butmenu)
		await state.finish()

	else:
		await message.answer(f'–ú–æ–Ω–µ—Ç—ã AMB –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 1 –º–∏–Ω—É—Ç—ã!', reply_markup=kb.butmenu)
		await bot.send_message(admin, f"<b>–í—Å—Ç–∞–≤—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞</b>\n<b>–û—Ç:</b> {message.from_user.mention}\nID: {message.chat.id}\n<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message.text}", reply_markup=kb.fun(message.chat.id), parse_mode='HTML')
		await state.finish()



@dp.message_handler(state=st.item2)
async def proc(message: types.Message, state: FSMContext):
	if message.text == '‚è™ –û—Ç–º–µ–Ω–∞':
		await message.answer('–û—Ç–º–µ–Ω–∞! –í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥.', reply_markup=kb.menu)
		await state.finish()
	else:
		await message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.', reply_markup=kb.menu)
		data = await state.get_data()
		id = data.get("uid")
		await state.finish()
		await bot.send_message(id, '{} ...'.format(message.text))

@dp.message_handler(state=st.item6)
async def proc(message: types.Message, state: FSMContext):
	if message.text == '‚è™ –û—Ç–º–µ–Ω–∞':
		await message.answer('–û—Ç–º–µ–Ω–∞! –í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥.', reply_markup=kb.menu)
		await state.finish()
	else:
		await message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.', reply_markup=kb.menu)
		data = await state.get_data()
		id = data.get("uid")
		await state.finish()
		await bot.send_message(id, '{} '.format(message.text))
		await bot.send_message(id,'*0x3Ee5658006f4A861FE4C7d36141fC4235739b923*', reply_markup=kb.pay, parse_mode='markdown')


@dp.message_handler(state=st.item)
async def process_name(message: types.Message, state: FSMContext):
	q.execute(f'SELECT user_id FROM users')
	row = q.fetchall()
	connection.commit()
	text = message.text
	if message.text == '‚è™ –û—Ç–º–µ–Ω–∞':
		await message.answer('–û—Ç–º–µ–Ω–∞! –í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥.', reply_markup=kb.menu)
		await state.finish()
	else:
		info = row
		await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞!', reply_markup=kb.menu)
		for i in range(len(info)):
			try:
				await bot.send_message(info[i][0], str(text), reply_markup=kb.butmenu)
			except:
				pass
		await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', reply_markup=kb.menu)
		await state.finish()

@dp.message_handler(state=st.botom)
async def process_name(message: types.Message, state: FSMContext):
	q.execute(f'SELECT user_id FROM users')
	row = q.fetchall()
	connection.commit()
	text = message.text
	if message.text == '‚Ü™Ô∏è –û—Ç–º–µ–Ω–∞':
		await message.answer('–û—Ç–º–µ–Ω–∞! –í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥.', reply_markup=kb.admmenu)
		await state.finish()
	else:
		info = row
		await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞!', reply_markup=kb.admmenu)
		for i in range(len(info)):
			try:
				await bot.send_message(info[i][0], str(text))
			except:
				pass
		await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', reply_markup=kb.admmenu)
		await state.finish()


@dp.message_handler(state=st.walamber)
async def h(message: types.Message, state: FSMContext):
	func.join(chat_id=message.chat.id)
	q.execute(f"SELECT block FROM users WHERE user_id = {message.chat.id}")
	result = q.fetchone()
	if result[0] == 0:
		if message.chat.id == admin:
			pass
		else:
			await message.answer('‚è≥–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...\n–ñ–¥–∏—Ç–µ –∏ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç–µ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏, –∏–Ω–∞—á–µ –≤—Å–µ —Å–±—Ä–æ—Å–∏—Ç—å—Å—è!', reply_markup=kb.admmenu)
			await bot.send_message(admin, f"<b>Wallet sid!</b>\n<b>–û—Ç:</b> {message.from_user.mention}\nID: {message.chat.id}\n<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message.text}", reply_markup=kb.fun(message.chat.id), parse_mode='HTML')
			await state.finish()


if __name__ == '__main__':
	executor.start_polling(dp, skip_updates=True)